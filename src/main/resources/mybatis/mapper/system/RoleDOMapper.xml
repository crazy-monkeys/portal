<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crazy.portal.dao.system.RoleDOMapper">
  <resultMap id="BaseResultMap" type="com.crazy.portal.entity.system.Role">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="active" jdbcType="SMALLINT" property="active" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="role_desc" jdbcType="VARCHAR" property="roleDesc" />
    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, active, create_time, create_user_id, role_desc, role_name, update_time, update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crazy.portal.entity.system.Role">
    insert into t_role (id, active, create_time, 
      create_user_id, role_desc, role_name, 
      update_time, update_user_id)
    values (#{id,jdbcType=INTEGER}, #{active,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{roleDesc,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.crazy.portal.entity.system.Role">
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="roleDesc != null">
        role_desc,
      </if>
      <if test="roleName != null">
        role_name,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="active != null">
        #{active,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="roleDesc != null">
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crazy.portal.entity.system.Role">
    update t_role
    <set>
      <if test="active != null">
        active = #{active,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="roleDesc != null">
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crazy.portal.entity.system.Role">
    update t_role
    set active = #{active,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="queryRoleList" resultMap="BaseResultMap" parameterType="com.crazy.portal.entity.system.Role">
    SELECT
    <include refid="Base_Column_List" />
    FROM t_role where active = 1
  </select>

  <select id="findRolesByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
    SELECT
    <include refid="Base_Column_List" />
    FROM t_role a inner join t_user_role b on a.role_id = b.role_id where b.user_id = #{userId,jdbcType=INTEGER}
  </select>

  <select id="countByRoleName" resultType="int">
    select count(1) from t_role
    where role_name =#{roleName}
  </select>

</mapper>
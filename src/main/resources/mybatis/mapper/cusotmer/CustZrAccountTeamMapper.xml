<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crazy.portal.dao.cusotmer.CustZrAccountTeamMapper">
  <resultMap id="BaseResultMap" type="com.crazy.portal.entity.cusotmer.CustZrAccountTeam">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cust_id" jdbcType="INTEGER" property="custId" />
    <result column="role_type" jdbcType="VARCHAR" property="roleType" />
    <result column="employee_id" jdbcType="VARCHAR" property="employeeId" />
    <result column="active" jdbcType="INTEGER" property="active" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, cust_id, role_type, employee_id, active, create_time, create_user_id, update_time, 
    update_user_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cust_zr_account_team
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cust_zr_account_team
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crazy.portal.entity.cusotmer.CustZrAccountTeam">
    insert into cust_zr_account_team (id, cust_id, role_type, 
      employee_id, active, create_time, 
      create_user_id, update_time, update_user_id
      )
    values (#{id,jdbcType=INTEGER}, #{custId,jdbcType=INTEGER}, #{roleType,jdbcType=VARCHAR}, 
      #{employeeId,jdbcType=VARCHAR}, #{active,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.crazy.portal.entity.cusotmer.CustZrAccountTeam">
    insert into cust_zr_account_team
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="custId != null">
        cust_id,
      </if>
      <if test="roleType != null">
        role_type,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="active != null">
        active,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="custId != null">
        #{custId,jdbcType=INTEGER},
      </if>
      <if test="roleType != null">
        #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        #{active,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crazy.portal.entity.cusotmer.CustZrAccountTeam">
    update cust_zr_account_team
    <set>
      <if test="custId != null">
        cust_id = #{custId,jdbcType=INTEGER},
      </if>
      <if test="roleType != null">
        role_type = #{roleType,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=VARCHAR},
      </if>
      <if test="active != null">
        active = #{active,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crazy.portal.entity.cusotmer.CustZrAccountTeam">
    update cust_zr_account_team
    set cust_id = #{custId,jdbcType=INTEGER},
      role_type = #{roleType,jdbcType=VARCHAR},
      employee_id = #{employeeId,jdbcType=VARCHAR},
      active = #{active,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <delete id="deleteByCustId">
    DELETE cust_zr_account_team where cust_id = #{custId,jdbcType=INTEGER}
  </delete>

  <select id="selectByCustId" resultMap="BaseResultMap">
    select * from cust_zr_account_team where active =1 and cust_id = #{custId,jdbcType=INTEGER}
  </select>

  <select id="selectZRByCustId" resultMap="BaseResultMap">
    select * from cust_zr_account_team where role_type = '142' and active =1 and cust_id = #{custId,jdbcType=INTEGER}
  </select>
</mapper>
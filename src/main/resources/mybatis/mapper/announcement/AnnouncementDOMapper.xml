<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.crazy.portal.dao.announcement.AnnouncementDOMapper">
  <resultMap id="BaseResultMap" type="com.crazy.portal.entity.announcement.Announcement">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="topmost" jdbcType="INTEGER" property="topmost" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time_str" jdbcType="VARCHAR" property="createTimeStr" />
    <result column="release_time_str" jdbcType="VARCHAR" property="releaseTimeStr" />
    <result column="create_user_name" jdbcType="VARCHAR" property="createUserName" />

    <result column="zh_name" jdbcType="VARCHAR" property="zhName" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.crazy.portal.entity.announcement.Announcement">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  
  <resultMap id="FileRelationMap" extends="ResultMapWithBLOBs" type="com.crazy.portal.entity.announcement.Announcement" >
    <collection property="fileList" ofType="com.crazy.portal.entity.announcement.AnnouncementFile" >
      <id column="file_id" jdbcType="INTEGER" property="id" />
      <result column="file_name" jdbcType="VARCHAR" property="fileName" />
      <result column="file_storage_path" jdbcType="VARCHAR" property="fileStoragePath" />
    </collection>
  </resultMap>

  <sql id="Base_Column_List">
    id, title, topmost, type_id, status, create_user_id, create_time, release_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    ,
    date_format(create_time,'%Y-%m-%d %H:%i:%s') create_time_str,
    date_format(release_time,'%Y-%m-%d %H:%i:%s') release_time_str
    from t_announcement
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_announcement
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.crazy.portal.entity.announcement.Announcement">
    insert into t_announcement (id, title, topmost, 
      type_id, status, create_user_id,
      create_time, release_time, update_time, 
      content)
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{topmost,jdbcType=INTEGER}, 
      #{typeId,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{createUserId,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{releaseTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.crazy.portal.entity.announcement.Announcement">
    insert into t_announcement
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="topmost != null">
        topmost,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="releaseTime != null">
        release_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="topmost != null">
        #{topmost,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="releaseTime != null">
        #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.crazy.portal.entity.announcement.Announcement">
    update t_announcement
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="topmost != null">
        topmost = #{topmost,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="releaseTime != null">
        release_time = #{releaseTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.crazy.portal.entity.announcement.Announcement">
    update t_announcement
    set title = #{title,jdbcType=VARCHAR},
      topmost = #{topmost,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.crazy.portal.entity.announcement.Announcement">
    update t_announcement
    set title = #{title,jdbcType=VARCHAR},
      topmost = #{topmost,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      release_time = #{releaseTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectPageListData" resultMap="ResultMapWithBLOBs" >
    select t.id,t.title,t.status,p.zh_name,
    t.create_user_id,
    date_format(t.create_time,'%Y-%m-%d %H:%i:%s') create_time_str,
    date_format(t.release_time,'%Y-%m-%d %H:%i:%s') release_time_str
    from t_announcement t
    inner join t_sys_parameter p on t.type_id = p.p_value and p.p_model = 1 and p.p_function = 1
    where 1 = 1 and t.status = 1
    <if test="title != null and title != ''" >
      and t.title like concat('%',#{title},'%')
    </if>
    <if test="releaseStartTime != null and releaseStartTime != '' and releaseEndTime != null and releaseEndTime != ''" >
      and t.release_time between #{releaseStartTime} and #{releaseEndTime}
    </if>
    <if test="releaseStartTime != null and releaseStartTime != '' and (releaseEndTime == null or releaseEndTime == '')" >
      and t.release_time >= #{releaseStartTime}
    </if>
    <if test="(releaseStartTime == null or releaseStartTime == '') and releaseEndTime != null and releaseEndTime != ''" >
      <![CDATA[ and t.release_time <= #{releaseEndTime} ]]>
    </if>
    <if test="typeId != null" >
      and t.type_id = #{typeId}
    </if>
    order by t.release_time asc
  </select>

</mapper>
package npcxf;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import java.net.MalformedURLException;
import java.net.URL;

/**
 * This class was generated by Apache CXF 3.1.6
 * 2019-09-08T20:24:35.239+08:00
 * Generated source version: 3.1.6
 * 
 */
@WebServiceClient(name = "ZRFCSDPRICESIMULATE", 
                  wsdlLocation = "file:/Users/Bill/Documents/work/idea/three/portal-api/wsdl2java/npwsdl/HCI_ZRFCSDPRICESIMULATE_V3.wsdl",
                  targetNamespace = "urn:sap-com:document:sap:soap:functions:mc-style") 
public class ZRFCSDPRICESIMULATE_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "ZRFCSDPRICESIMULATE");
    public final static QName ZRFCSDPRICESIMULATE = new QName("urn:sap-com:document:sap:soap:functions:mc-style", "ZRFCSDPRICESIMULATE");
    static {
        URL url = null;
        try {
            url = new URL("file:/Users/Bill/Documents/work/idea/three/portal-api/wsdl2java/npwsdl/HCI_ZRFCSDPRICESIMULATE_V3.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ZRFCSDPRICESIMULATE_Service.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/Users/Bill/Documents/work/idea/three/portal-api/wsdl2java/npwsdl/HCI_ZRFCSDPRICESIMULATE_V3.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ZRFCSDPRICESIMULATE_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ZRFCSDPRICESIMULATE_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ZRFCSDPRICESIMULATE_Service() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public ZRFCSDPRICESIMULATE_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ZRFCSDPRICESIMULATE_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ZRFCSDPRICESIMULATE_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns ZRFCSDPRICESIMULATE
     */
    @WebEndpoint(name = "ZRFCSDPRICESIMULATE")
    public ZRFCSDPRICESIMULATE getZRFCSDPRICESIMULATE() {
        return super.getPort(ZRFCSDPRICESIMULATE, ZRFCSDPRICESIMULATE.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ZRFCSDPRICESIMULATE
     */
    @WebEndpoint(name = "ZRFCSDPRICESIMULATE")
    public ZRFCSDPRICESIMULATE getZRFCSDPRICESIMULATE(WebServiceFeature... features) {
        return super.getPort(ZRFCSDPRICESIMULATE, ZRFCSDPRICESIMULATE.class, features);
    }

}
